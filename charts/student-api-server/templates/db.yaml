apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: {{ .Values.app }}
spec:
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
      - name: {{ .Values.db.name }}-container
        image: postgres:latest
        envFrom:
        - configMapRef:
            name: {{ .Values.db.name }}-config
        - secretRef:
            name: {{ .Values.db.name }}-secret
        ports:
        - containerPort: {{ .Values.db.port }}
        volumeMounts:
        - mountPath: {{ .Values.db.persistentVolumes.readPath }}
          name: {{ .Values.db.persistentVolumes.accessName }}
      volumes:
      - name: {{ .Values.db.persistentVolumes.accessName }}
        persistentVolumeClaim:
          claimName: {{ .Values.db.name }}-pvc

---

apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Values.db.name }}-pv
  namespace: {{ .Values.app }}
spec:
  capacity:
    storage: {{ .Values.db.persistentVolumes.storage }}
  accessModes:
  - ReadWriteOnce
  hostPath:
    path: {{ .Values.db.persistentVolumes.writePath }}

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.db.name }}-pvc
  namespace: {{ .Values.app }}
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.db.persistentVolumes.storage }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.db.name }}-service
  namespace: {{ .Values.app }}
spec:
  selector:
    app: {{ .Values.db.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.db.port }}
      targetPort: {{ .Values.db.port }}
      nodePort: {{ .Values.db.services.nodePort.nodePort }}
  type: NodePort

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.db.name }}-config
  namespace: {{ .Values.app }}
data:
  POSTGRES_HOST: postgres-service
  POSTGRES_PORT: "5432"
  POSTGRES_DB: students
  POSTGRES_USER: postgres
